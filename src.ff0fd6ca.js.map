{"version":3,"sources":["partials/color-switch.js","partials/task-1.js","partials/task-2.js","partials/task-3.js","index.js"],"names":["startButton","document","querySelector","stopButton","body","getRandomHexColor","Math","floor","random","toString","timerId","addEventListener","setInterval","style","backgroundColor","disabled","clearInterval","delay","ms","Promise","resolve","setTimeout","logger","time","console","log","then","users","name","active","toggleUserState","allUsers","userName","map","user","updatedUsers","table","randomIntegerFromInterval","min","max","makeTransaction","transaction","reject","id","logSuccess","logError","warn","amount","catch"],"mappings":";;;AASA,MAAMA,EAAcC,SAASC,cAAc,yBACrCC,EAAaF,SAASC,cAAc,wBACpCE,EAAOH,SAASC,cAAc,QAIpC,SAASG,IACC,UAAGC,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,MAG3D,IAAIC,EAAU,KACdV,EAAYW,iBAAiB,QAAS,KACpCD,EAAUE,YAAY,KAEpBR,EAAKS,MAAMC,gBAAkBT,IAC7BL,EAAYe,UAAW,GACtB,OAGLZ,EAAWQ,iBAAiB,QAAS,KACnCK,cAAcN,GACdV,EAAYe,UAAW;;AC9BzB,MAAME,EAASC,GACN,IAAIC,QAASC,IAClBC,WAAW,IACXD,EAAQF,MAINI,EAAUC,GAASC,QAAQC,sBAAsBF,OAGvDN,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,MAAMS,KAAKJ;;ACZjB,MAAMK,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGnBC,EAAkB,CAACC,EAAUC,IAC1B,IAAIb,QAASC,IAIlBA,EAHqBW,EAASE,IAAIC,GAClCA,EAAKN,OAASI,EAAW,IAAKE,EAAML,QAASK,EAAKL,QAAWK,MAK3DZ,EAASa,GAAgBX,QAAQY,MAAMD,GAW7CL,EAAgBH,EAAO,SAASD,KAAKJ,GACrCQ,EAAgBH,EAAO,QAAQD,KAAKJ,GACpCQ,EAAgBH,EAAO,QAAQD,KAAKJ,GACpCQ,EAAgBH,EAAO,OAAOD,KAAKJ;;AC7BnC,MAAMe,EAA4B,CAACC,EAAKC,IAC/BjC,KAAKC,MAAMD,KAAKE,UAAY+B,EAAMD,EAAM,GAAKA,GAGhDE,EAAmBC,IACjBxB,MAAAA,EAAQoB,EAA0B,IAAK,KAEtC,OAAA,IAAIlB,QAAQ,CAACC,EAASsB,KAC3BrB,WAAW,KACUf,KAAKE,SAAW,GAEnCY,EAAQ,CAAEuB,GAAIF,EAAYE,GAAIpB,KAAMN,IAEpCyB,EAAOD,EAAYE,KAElB1B,MAGG2B,EAAa,EAAGD,GAAAA,EAAIpB,KAAAA,MAC5BC,QAAQC,mBAAmBkB,kBAAmBpB,QAG1CsB,EAAWF,IACfnB,QAAQsB,qCAAqCH,+BAa3CH,EAAgB,CAAEG,GAAI,GAAII,OAAQ,MAC/BrB,KAAKkB,GACLI,MAAMH,GAETL,EAAgB,CAAEG,GAAI,GAAII,OAAQ,MAC/BrB,KAAKkB,GACLI,MAAMH,GAETL,EAAgB,CAAEG,GAAI,GAAII,OAAQ,KAC/BrB,KAAKkB,GACLI,MAAMH,GAETL,EAAgB,CAAEG,GAAI,GAAII,OAAQ,MAC/BrB,KAAKkB,GACLI,MAAMH;;AC9Cb,aAJA,QAAA,oBACA,QAAA,8BACA,QAAA,wBACA,QAAA,wBACA,QAAA","file":"src.ff0fd6ca.js","sourceRoot":"../src","sourcesContent":["// const colors = [\n//   '#FFFFFF',\n//   '#2196F3',\n//   '#4CAF50',\n//   '#FF9800',\n//   '#009688',\n//   '#795548',\n// ];\n\nconst startButton = document.querySelector(\"[data-action='start']\");\nconst stopButton = document.querySelector(\"[data-action='stop']\");\nconst body = document.querySelector(\"body\");\n// const randomIntegerFromInterval = (min, max) => {\n//   return Math.floor(Math.random() * (max - min + 1) + min);\n// };\nfunction getRandomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}\n\nlet timerId = null;\nstartButton.addEventListener('click', () => {\n  timerId = setInterval(() => {\n    // body.style.backgroundColor = colors[randomIntegerFromInterval(0, colors.length - 1)];\n    body.style.backgroundColor = getRandomHexColor();\n    startButton.disabled = true;\n  }, 1000);\n});\n\nstopButton.addEventListener('click', () => {\n  clearInterval(timerId);\n  startButton.disabled = false;\n});","const delay = (ms) => {\n  return new Promise((resolve) => {\n    setTimeout(() => \n    resolve(ms));\n  });\n};\n\nconst logger = (time) => console.log(`Resolved after ${time}ms`);\n\n// Виклич функції для перевірки\ndelay(2000).then(logger); // Resolved after 2000ms\ndelay(1000).then(logger); // Resolved after 1000ms\ndelay(1500).then(logger); // Resolved after 1500ms\n","const users = [\n  { name: 'Mango', active: true },\n  { name: 'Poly', active: false },\n  { name: 'Ajax', active: true },\n  { name: 'Lux', active: false },\n];\n\nconst toggleUserState = (allUsers, userName) => {\n  return new Promise((resolve) => {\n    const updatedUsers = allUsers.map(user =>\n    user.name === userName ? { ...user, active: !user.active } : user\n  );\n    resolve(updatedUsers);\n  });\n};\nconst logger = updatedUsers => console.table(updatedUsers);\n\n/*\n * Зараз працює так\n */\n// toggleUserState(users, 'Mango', logger);\n// toggleUserState(users, 'Lux', logger);\n\n/*\n * Повинно працювати так\n */\ntoggleUserState(users, 'Mango').then(logger);\ntoggleUserState(users, 'Poly').then(logger);\ntoggleUserState(users, 'Ajax').then(logger);\ntoggleUserState(users, 'Lux').then(logger);","const randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = (transaction) => {\n  const delay = randomIntegerFromInterval(200, 500);\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const canProcess = Math.random() > 0.3;\n      if (canProcess) {\n      resolve({ id: transaction.id, time: delay });\n    } else {\n      reject(transaction.id);\n    }\n    }, delay);\n  });\n}\n    const logSuccess = ({ id, time }) => {\n  console.log(`Transaction ${id} processed in ${time}ms`);\n};\n\nconst logError = id => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\n    /*\n     * Працює так\n     */\n    // makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\n    // makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\n    // makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\n    // makeTransaction({ id: 73, amount: 100 }, logSuccess, logError);\n    /*\n     * Повинно працювати так\n     */\n    makeTransaction({ id: 70, amount: 150 })\n      .then(logSuccess)\n      .catch(logError);\n\n    makeTransaction({ id: 71, amount: 230 })\n      .then(logSuccess)\n      .catch(logError);\n\n    makeTransaction({ id: 72, amount: 75 })\n      .then(logSuccess)\n      .catch(logError);\n\n    makeTransaction({ id: 73, amount: 100 })\n      .then(logSuccess)\n      .catch(logError);","import './sass/main.scss';\nimport './partials/color-switch.js';\nimport './partials/task-1.js';\nimport './partials/task-2.js';\nimport './partials/task-3.js';\n"]}