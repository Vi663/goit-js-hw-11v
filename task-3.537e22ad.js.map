{"version":3,"sources":["partials/task-3.js"],"names":["randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","delay","Promise","resolve","reject","setTimeout","id","time","logSuccess","console","log","logError","warn","amount","then","catch"],"mappings":";AAAA,MAAMA,EAA4B,CAACC,EAAKC,IAC/BC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAGhDK,EAAmBC,IACjBC,MAAAA,EAAQR,EAA0B,IAAK,KAEtC,OAAA,IAAIS,QAAQ,CAACC,EAASC,KAC3BC,WAAW,KACUT,KAAKE,SAAW,GAEnCK,EAAQ,CAAEG,GAAIN,EAAYM,GAAIC,KAAMN,IAEpCG,EAAOJ,EAAYM,KAElBL,MAGGO,EAAa,EAAGF,GAAAA,EAAIC,KAAAA,MAC5BE,QAAQC,mBAAmBJ,kBAAmBC,QAG1CI,EAAWL,IACfG,QAAQG,qCAAqCN,+BAa3CP,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ,GAETZ,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ,GAETZ,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,KAC/BC,KAAKN,GACLO,MAAMJ,GAETZ,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ","file":"task-3.537e22ad.js","sourceRoot":"../src","sourcesContent":["const randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = (transaction) => {\n  const delay = randomIntegerFromInterval(200, 500);\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const canProcess = Math.random() > 0.3;\n      if (canProcess) {\n      resolve({ id: transaction.id, time: delay });\n    } else {\n      reject(transaction.id);\n    }\n    }, delay);\n  });\n}\n    const logSuccess = ({ id, time }) => {\n  console.log(`Transaction ${id} processed in ${time}ms`);\n};\n\nconst logError = id => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\n    /*\n     * Працює так\n     */\n    // makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\n    // makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\n    // makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\n    // makeTransaction({ id: 73, amount: 100 }, logSuccess, logError);\n    /*\n     * Повинно працювати так\n     */\n    makeTransaction({ id: 70, amount: 150 })\n      .then(logSuccess)\n      .catch(logError);\n\n    makeTransaction({ id: 71, amount: 230 })\n      .then(logSuccess)\n      .catch(logError);\n\n    makeTransaction({ id: 72, amount: 75 })\n      .then(logSuccess)\n      .catch(logError);\n\n    makeTransaction({ id: 73, amount: 100 })\n      .then(logSuccess)\n      .catch(logError);"]}